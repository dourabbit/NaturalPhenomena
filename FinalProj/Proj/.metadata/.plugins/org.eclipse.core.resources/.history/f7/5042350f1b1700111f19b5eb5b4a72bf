




var InputHelper = (function () {
    // private static
    //var nextId = 1;
    var Singleton;
    var threshold = 3;
    // constructor
    var cls = function (canvas) {
        var mouseEvents = {};
        var objectPool = [];
        var oldX, oldY;
        var curEvent;
        this.handleMouseDown = function (event) {
            var point = [0, 0, 0];
            var vec = [0, 0, 0];
            //Cam.GetRay(event.clientX, event.clientY, point, vec);
            document.frmOne.mouseState.value = "MouseDown";
            objectPool = [];
            if(!curEvent)
            	curEvent = new Object();
            curEvent={MousePosX: event.clientX, MousePosY:event.clientY, Event:"MouseDown"};
            objectPool.push(curEvent);
        }

        this.handleMouseUp = function (event) {
//            if (event.identifier == null) {
//                event.identifier = 0;
//            }

//            objectPool.push(mouseEvents[event.identifier]);
//            mouseEvents[event.identifier] = null;
//            cloth.release(event.identifier);
            
            document.frmOne.mouseState.value = "MouseUp";
            if(!curEvent)
            	curEvent = new Object();
            curEvent={MousePosX: event.clientX, MousePosY:event.clientY, Event:"MouseUp"};
            objectPool.push(curEvent);
        }

        this.handleMouseMove = function (event) {

        	if(!objectPool)
        		return;
        	if(objectPool.length==0)
        		return;
        	if(objectPool[objectPool.length-1].Event == "MouseUp"){
        		document.frmOne.mouseState.value = "Clear";
        		objectPool = [];
        	}
            var point = [0, 0, 0];
            var vec = [0, 0, 0];
            //Cam.GetRay(mouseEvents[event.identifier].lastMouseX, mouseEvents[event.identifier].lastMouseY, point, vec);
            document.frmOne.mouseX.value = event.clientX;
            document.frmOne.mouseY.value = event.clientY;
            document.frmOne.oldMouseX.value = this.oldX;
            document.frmOne.oldMouseY.value = this.oldY;
            //            cloth.move(event.identifier,
            //		            point[0] - (vec[0] * point[2] / vec[2]),
            //		            point[1] - (vec[1] * point[2] / vec[2]),
            //		            0);

            //mouseEvents[event.identifier].lastMouseX = event.clientX;
            //mouseEvents[event.identifier].lastMouseY = event.clientY;
             if(this.oldX!=event.clientX&&this.oldY!=event.clientY)
             {
            	document.frmOne.mouseState.value = "MouseMove";
             }
            else if(Math.abs(this.oldX-event.clientX)<threshold&&Math.abs(this.oldY-event.clientY)<threshold)
            {
            	document.frmOne.mouseState.value = "MouseHovering";
            }
            this.oldX = event.clientX;
            this.oldY = event.clientY;
        }
        Singleton = cls;




        canvas.onmousedown = this.handleMouseDown;
        canvas.onmouseup = this.handleMouseUp;
        canvas.onmousemove = this.handleMouseMove;
    };


    cls.GetInputHelper = function () {
        return Singleton;
    }

    return cls;
})();

